import Head from 'next/head'
import styles from '../styles/index.module.css'
import { gql } from "@apollo/client";
import client from "../apollo-client";

export default function Home({ posts }) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Next.js - wordpress</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Next.js with wordpress using GRAPHQL!
        </h1>

        <p className={styles.description}>
          This is a small project, showing how to connect a headless wordpress with a next.js framework.
          The main goal is just the base connection and how to fetch data, without looking to the layout.
        </p>

        <div className={styles.grid}>
          {
            posts.map((post) => (
              <a key={post.node.uri} href={post.node.uri} className={styles.card}>
                <h2>{post.node.title}</h2>
                <div className={styles.excerpt} dangerouslySetInnerHTML={{ __html: post.node.excerpt }} ></div>
              </a>
            ))
          }
        </div>
      </main>
    </div>
  )
}

export async function getStaticProps() {
  const response = await client.query({
    query: gql`

    query NewQuery {
      posts {
        edges {
          node {
            title
            excerpt
            uri
          }
        }
      }
    }
    `,
  });

  // const menu = await client.query({
  //   query: gql`
  //   query MyQuery2 {
  //     menuItems {
  //       nodes {
  //         uri
  //         label
  //       }
  //     }
  //   }
  //   `,
  // });
  // console.log(menu.data.menuItems)

  return {
    props: {
      posts: response.data.posts.edges
    },
  };
}